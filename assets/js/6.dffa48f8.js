(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{151:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p"),t._m(1),s("p"),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("To begin with, we're going to install docker just like we would for any other OS by following Docker's\n"),s("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/debian/#install-docker-ce",target:"_blank",rel:"noopener noreferrer"}},[t._v("official documentation for Debian"),s("OutboundLink")],1),t._v(".")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),s("p",[t._v("The line should then look like the one below â€” assuming nothing else was in the quote to begin with.")]),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),t._m(15),t._m(16),t._v(" "),s("p",[t._v("Now that we're on the new kernel you probably need to update some software to take advantage of it. To do this,\nsimply run the command below.")]),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),t._m(21),t._m(22)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"docker-on-debian-8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-on-debian-8","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker on Debian 8")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#install-docker"}},[this._v("Install Docker")])]),e("li",[e("a",{attrs:{href:"#update-grub-startup"}},[this._v("Update GRUB Startup")])]),e("li",[e("a",{attrs:{href:"#add-backports-repo"}},[this._v("Add Backports Repo")])]),e("li",[e("a",{attrs:{href:"#update-software-setup-docker"}},[this._v("Update Software & Setup Docker")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("There is a potential for broken software after this upgrade as we are moving to a non-stable kernel (in regards\nto mainline Debian). Please take backups and only proceed if you are comfortable with this process.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"install-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-docker","aria-hidden":"true"}},[this._v("#")]),this._v(" Install Docker")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Once you've done that, if you run "),e("code",[this._v("docker info")]),this._v(" you'll notice some missing features at the bottom, something\nlike the output below.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("WARNING: No memory limit support\nWARNING: No swap limit support\nWARNING: No kernel memory limit support\nWARNING: No oom kill disable support\nWARNING: No cpu cfs quota support\nWARNING: No cpu cfs period support\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"update-grub-startup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update-grub-startup","aria-hidden":"true"}},[this._v("#")]),this._v(" Update GRUB Startup")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To fix the memory limit support issues, we just need to add two arguments to our default grub startup. Start by\nopening "),e("code",[this._v("/etc/default/grub")]),this._v(" and adding the following arguments to "),e("code",[this._v("GRUB_CMDLINE_LINUX_DEFAULT")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("swapaccount=1 cgroup_enable=memory\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('GRUB_CMDLINE_LINUX_DEFAULT="swapaccount=1 cgroup_enable=memory"\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("After doing that, run "),e("code",[this._v("sudo update-grub")]),this._v(" to update our grub configuration.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"add-backports-repo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-backports-repo","aria-hidden":"true"}},[this._v("#")]),this._v(" Add Backports Repo")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("We then need to enable the "),e("code",[this._v("jessie-backports")]),this._v(" apt repository to install a newer kernel. To do this, run the commands below.")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" deb http://http.debian.net/debian jessie-backports main "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/apt/sources.list.d/jessie-backports.list\n"),s("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" deb http://http.debian.net/debian jessie-backports main contrib non-free "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/apt/sources.list.d/jessie-backports.list\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" apt update\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("To find the most recent kernels, run "),e("code",[this._v("apt-cache search linux-image")]),this._v(" which will list all of the ones available. In this\ncase, we'll install the "),e("code",[this._v("4.8.0")]),this._v("kernel using the command below. Once we've done that, it is time to reboot the server\nto start using this kernel.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("apt "),e("span",{attrs:{class:"token function"}},[this._v("install")]),this._v(" -t jessie-backports linux-image-4.9.0-0.bpo.3-amd64\n"),e("span",{attrs:{class:"token function"}},[this._v("reboot")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"update-software-setup-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update-software-setup-docker","aria-hidden":"true"}},[this._v("#")]),this._v(" Update Software & Setup Docker")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("apt update "),e("span",{attrs:{class:"token operator"}},[this._v("&&")]),this._v(" apt upgrade\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Once that is done, we need to make an adjustment to docker to use "),e("code",[this._v("overlay2")]),this._v(" rather than "),e("code",[this._v("aufs")]),this._v(" since "),e("code",[this._v("aufs")]),this._v(" is not\nsupported on this kernel currently. Run the command below to do so.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token function"}},[this._v("sed")]),this._v(" -i "),e("span",{attrs:{class:"token string"}},[this._v("'s,/usr/bin/dockerd,/usr/bin/dockerd --storage-driver=overlay2,g'")]),this._v(" /lib/systemd/system/docker.service\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Finally, update "),e("code",[this._v("systemd")]),this._v(" and start docker using the following commands.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("systemctl daemon-reload\n"),e("span",{attrs:{class:"token function"}},[this._v("service")]),this._v(" docker start\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Docker should now be running and reporting no errors if you run "),e("code",[this._v("docker info")]),this._v("!")])}],!1,null,null,null);e.default=r.exports}}]);